#Required only when there are SubModel(s)
import sys 
sys.path.append(r"C:\Users\Chad\AppData\Local\Temp\ArcGISProTemp25224")
# -*- coding: utf-8 -*-
"""
Generated by ArcGIS ModelBuilder on : 2025-03-06 13:52:28
"""
import arcpy
from sys import argv

#For inline variable substitution, parameters passed as a String are evaluated using locals(), globals() and isinstance(). To override, substitute values directly.
def Model61(Enter_File_GDB="Z:\\MISSISSIPPI\\Benton3_County_Contours\\Benton3_County_Contours.gdb"):  # Step1 Post Processing Create Data Boudary Index for CH (Mosaic Boundary UTM cannot exist_Single County)

    # To allow overwriting outputs change overwriteOutput option to True.
    arcpy.env.overwriteOutput = False

    Index_5000Ft_2_ = fr"{Path}\{Name}.gdb\Index_5000Ft"
    Mosaic_Dataset_UTM_2_ = fr"{Path}\Contours_Step1.gdb\Mosaic_Dataset_UTM"
Name = "Benton3_County_Contours"
Path = "Z:\\MISSISSIPPI\\Benton3_County_Contours"

    # Process: Parse Path (Parse Path) (mb)
    Path, Name, Extension, Workspace = arcpy.mb.ParsePathExt(in_data_element=Enter_File_GDB.__str__().format(**locals(),**globals())if isinstance(Enter_File_GDB, str) else Enter_File_GDB)

    # Process: Define Mosaic Dataset NoData (2) (Define Mosaic Dataset NoData) (management)
    if Name:
        Mosaic_Dataset_UTM_4_ = arcpy.management.DefineMosaicDatasetNoData(in_mosaic_dataset=Mosaic_Dataset_UTM_2_, num_bands=1, bands_for_nodata_value=[["ALL_BANDS", "0"]])[0]

    # Process: Build Footprints (Build Footprints) (management)
    if Name:
        Mosaic_Dataset_UTM = arcpy.management.BuildFootprints(in_mosaic_dataset=Mosaic_Dataset_UTM_4_, min_data_value=-300, max_data_value=25000, approx_num_vertices=5000, update_boundary="UPDATE_BOUNDARY", min_region_size=1)[0]

    # Process: Export Mosaic Dataset Geometry (Export Mosaic Dataset Geometry) (management)
    Mosaic_Boundary_UTM = fr"{Path}\{Name}.gdb\Mosaic_Boundary_UTM"
    if Name:
        arcpy.management.ExportMosaicDatasetGeometry(in_mosaic_dataset=Mosaic_Dataset_UTM, out_feature_class=Mosaic_Boundary_UTM)

    # Process: Project (3) (Project) (management)
    Mosaic_Boundary_SP = fr"{Path}\{Name}.gdb\Smoothed_PAEK_10FT\Mosaic_Boundary_SP"
    if Name:
        arcpy.management.Project(in_dataset=Mosaic_Boundary_UTM, out_dataset=Mosaic_Boundary_SP, out_coor_system="PROJCS[\"NAD_1983_2011_StatePlane_Mississippi_East_FIPS_2301_Ft_US\",GEOGCS[\"GCS_NAD_1983_2011\",DATUM[\"D_NAD_1983_2011\",SPHEROID[\"GRS_1980\",6378137.0,298.257222101]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"False_Easting\",984250.0],PARAMETER[\"False_Northing\",0.0],PARAMETER[\"Central_Meridian\",-88.83333333333333],PARAMETER[\"Scale_Factor\",0.99995],PARAMETER[\"Latitude_Of_Origin\",29.5],UNIT[\"Foot_US\",0.3048006096012192]]")

    # Process: Intersect (2) (Intersect) (analysis)
    Data_Limits_Step1_2_ = fr"{Path}\{Name}.gdb\Data_Limits_Step1"
    if Name:
        arcpy.analysis.Intersect(in_features=[[Mosaic_Boundary_SP, ""], [Index_5000Ft_2_, ""]], out_feature_class=Data_Limits_Step1_2_, join_attributes="ONLY_FID")

    # Process: Dissolve (2) (Dissolve) (management)
    Data_Limits_SP_2_ = fr"{Path}\{Name}.gdb\Data_Limits_SP"
    if Name:
        arcpy.management.Dissolve(in_features=Data_Limits_Step1_2_, out_feature_class=Data_Limits_SP_2_, multi_part="SINGLE_PART")

    # Process: Clip (2) (Clip) (analysis)
    Index_5000Ft_w_Limits_2_ = fr"{Path}\{Name}.gdb\Index_5000Ft_w_Limits"
    if Name:
        arcpy.analysis.Clip(in_features=Index_5000Ft_2_, clip_features=Data_Limits_SP_2_, out_feature_class=Index_5000Ft_w_Limits_2_)

    # Process: Delete Field (Delete Field) (management)
    if Name:
        Index_5000Ft_w_Limits = arcpy.management.DeleteField(in_table=Index_5000Ft_w_Limits_2_, drop_field=["label_x", "label_y", "NAME_X", "NAME_Y", "Abbeville", "Aiken", "Allendale", "Anderson", "Bamberg", "Barnwell", "Beaufort", "Berkeley", "Calhoun", "Charleston", "Cherokee", "Chester", "Chesterfield", "Clarendon", "Colleton", "Darlington", "Dillon", "Dorchester", "Edgefield", "Fairfield", "Florence", "Georgetown", "Greenville", "Greenwood", "Hampton", "Horry", "Jasper", "Kershaw", "Lancaster", "Laurens", "Lee", "Lexington", "McCormick", "Marion", "Marlboro", "Newberry", "Oconee", "Orangeburg", "Pickens", "Richland", "Saluda", "Spartanburg", "Sumter", "Union", "Williamsburg", "York", "P_D_Area"])[0]

    # Process: Project (4) (Project) (management)
    Index_5000Ft_WGS_2_ = fr"{Path}\{Name}.gdb\Index_5000Ft_WGS"
    if Name:
        arcpy.management.Project(in_dataset=Index_5000Ft_w_Limits, out_dataset=Index_5000Ft_WGS_2_, out_coor_system="GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]]")

    # Process: Features To JSON (2) (Features To JSON) (conversion)
    _Workspace_Index_geojson = fr"{Path}\{Workspace}_Index.geojson"
    if Name:
        arcpy.conversion.FeaturesToJSON(in_features=Index_5000Ft_WGS_2_, out_json_file=_Workspace_Index_geojson, format_json="NOT_FORMATTED", geoJSON="GEOJSON")

if __name__ == '__main__':
    # Global Environment settings
    with arcpy.EnvManager(scratchWorkspace="C:\\Users\\Chad\\AppData\\Local\\Temp\\ArcGISProTemp25224\\Untitled\\Default.gdb", workspace="C:\\Users\\Chad\\AppData\\Local\\Temp\\ArcGISProTemp25224\\Untitled\\Default.gdb"):
        Model61(*argv[1:])

